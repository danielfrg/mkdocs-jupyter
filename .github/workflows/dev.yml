name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install package
      run: |
        make build
        pip install dist/*.tar.gz
        pip freeze

  lint:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Check linting
      run: |
        make check

  test:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        mkdocs-version: ["1.1"]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip freeze
        pip install -U mkdocs==${{ matrix.mkdocs-version }}

    - name: Install package
      run: |
        make build
        pip install dist/*.tar.gz
        pip freeze

    - name: Check linting
      run: |
        make check

    - name: Run tests
      if: always()
      run: |
        make test
