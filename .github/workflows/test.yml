name: test

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * *"

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  test:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-20.04]
        python-version: [3.8, 3.9, "3.10", 3.11]
        node-version: ["18"]

    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow

      - name: Install Task
        uses: arduino/setup-task@v1

      # ------------------------------------------------------------------------
      # JS

      - name: JS - Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: JS - Load cached node_modules
        id: cached-node_modules
        uses: actions/cache@v2
        with:
          path: js/node_modules
          key: >
            node_modules
            ${{ runner.os }}
            node-${{ matrix.node-version }}
            ${{ hashFiles('js/package*.json') }}

      - name: JS - Install JS deps
        if: steps.cached-node_modules.outputs.cache-hit != 'true'
        run: |
          task js-install

      - name: JS - Build JS
        run: |
          task js-build

      # ------------------------------------------------------------------------
      # Python

      - name: Python - Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        id: cached-python-env
        with:
          path: ${{ env.pythonLocation }}
          key: >
            python
            ${{ runner.os }}
            python-${{ matrix.python-version }}
            ${{ hashFiles('pyproject.toml') }}
            ${{ hashFiles('requirements/*') }}

      - name: Install dependencies
        if: steps.cached-python-env.outputs.cache-hit != 'true'
        run: |
          pip install -r requirements/pyproject.txt

      - name: Install Hatch
        run: |
          pip install --upgrade hatch

      # ------------------------------------------------------------------------
      # Test

      - name: Build package
        run: |
          task build

      - name: Install package
        run: |
          pip install dist/*.tar.gz
          pip freeze

      - name: Run tests
        run: |
          task test-all
          task report

      - name: Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml

      - name: Upload test results to GitHub
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results-py${{ matrix.python-version }}
          path: htmlcov
